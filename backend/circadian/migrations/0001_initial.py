# Generated by Django 5.0.6 on 2024-09-11 15:23

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=64,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(3)],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=64,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_users", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="custom_user_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="Diary",
            fields=[
                (
                    "diary_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("main_text", models.TextField(blank=True)),
                ("progress", models.TextField(blank=True)),
                ("memo", models.TextField(blank=True)),
                ("todos", models.JSONField(blank=True, default=list)),
                ("multimedia", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "front_diary_id",
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "diary",
                "verbose_name_plural": "diaries",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("edit_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("EDIT", "Edit"),
                            ("DELETE", "Delete"),
                        ],
                        default="CREATE",
                        max_length=10,
                    ),
                ),
                ("diff", models.TextField(null=True)),
                (
                    "diary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="histories",
                        to="circadian.diary",
                    ),
                ),
            ],
            options={
                "verbose_name": "history",
                "verbose_name_plural": "histories",
                "ordering": ["-edit_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Log",
            fields=[
                (
                    "log_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="INFO",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("VISIT", "Visit"),
                            ("LEAVE", "Leave"),
                            ("SIGNIN", "Sign In"),
                            ("LOGIN", "Login"),
                            ("LOGOUT", "Logout"),
                            ("NULL", "Null"),
                        ],
                        default="VISIT",
                        max_length=10,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "log",
                "verbose_name_plural": "logs",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["username"], name="circadian_u_usernam_18e490_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="circadian_u_email_42a336_idx"),
        ),
        migrations.AddIndex(
            model_name="diary",
            index=models.Index(
                fields=["user", "date"], name="circadian_d_user_id_ca2c92_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="diary",
            unique_together={("user", "date")},
        ),
        migrations.AddIndex(
            model_name="history",
            index=models.Index(fields=["diary"], name="circadian_h_diary_i_80a9ed_idx"),
        ),
        migrations.AddIndex(
            model_name="log",
            index=models.Index(fields=["user"], name="circadian_l_user_id_df7c0a_idx"),
        ),
        migrations.AddIndex(
            model_name="log",
            index=models.Index(
                fields=["timestamp"], name="circadian_l_timesta_e0262d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="log",
            index=models.Index(
                fields=["user", "timestamp"], name="circadian_l_user_id_6d8cfb_idx"
            ),
        ),
    ]
